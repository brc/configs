# -*- mode: shell-script; -*-
# vim: set ft=sh:

function have {
    # command -v "$1" >/dev/null
    /bin/whereis "$1" |awk '{print $2}' |/bin/grep -q '^/'
}

function inside-emacs {
    [ -n "${INSIDE_EMACS}" ]
}

if inside-emacs; then
    # TODO make $LESS more emacs-friendly in case it is accidentally invoked by something else (e.g., bat(1))
    alias less=emacs-pager
    export PAGER=emacs-pager
    export SYSTEMD_PAGER=cat  # systemd won't honor /home/brc/bin/emacs-pager for some reason
fi

# Don't need this shim anymore because have emacs-pager-mode now.
#
# function bat {
#     # must use abs path to bat(1) so we don't recurse!
#     local bat_cmd="$(whereis -b bat |awk '{print $2}')"
#
#     if [ -z "${bat_cmd}" ]; then
#         >&2 echo "$0: command not found: bat"
#         return 127
#     fi
#     if inside-emacs; then
#         # don't use pager
#         "${bat_cmd}" -pp "$@"
#     else
#         "${bat_cmd}" "$@"
#     fi
# }

if ! inside-emacs; then
    have bat && alias cat=bat
fi


# aliases
#
#have exa && alias ls=exa  # incompatible ls(1) flags

alias a='ls -ah --color=auto'
alias a.='ls -ah --color=auto .*'
alias ad='ls -ah --color=auto -d'
alias ad.='ls -ah --color=auto -d .*'
alias at='ls -ah --color=auto -tr'
alias as='ls -ah --color=auto -Sr'

alias aa='ls -ah --color=auto -l'
alias aa.='ls -ah --color=auto -l .*'
alias aad='ls -ah --color=auto -l -d'
alias aad.='ls -ah --color=auto -l -d .*'
alias aat='ls -ah --color=auto -l -tr -L'  # deref symlinks
alias aas='ls -ah --color=auto -l -Sr -L'  #

if have 'ls++' && ! inside-emacs
then
    alias aa='ls++ --potsf -a'
    alias aa.='ls++ --potsf -a .*'
    alias aad='ls++ --potsf -a -d'
    alias aad.='ls++ --potsf -a -d .*'
    alias aat='ls++ --potsf -a -tr'
    alias aas='ls++ --potsf -a -Sr'
    alias aaat='ls++ --potsf -a -tr -L'  # deref symlinks
    alias aaas='ls++ --potsf -a -Sr -L'  #
fi

alias wa='sudo ls -ah --color=auto'
alias wa.='sudo ls -ah --color=auto .*'
alias wad='sudo ls -ah --color=auto -d'
alias wad.='sudo ls -ah --color=auto -d .*'
alias wat='sudo ls -ah --color=auto -tr'
alias was='sudo ls -ah --color=auto -Sr'

alias waa='sudo ls -ah --color=auto -l'
alias waa.='sudo ls -ah --color=auto -l .*'
alias waad='sudo ls -ah --color=auto -l -d'
alias waad.='sudo ls -ah --color=auto -l -d .*'
alias waat='sudo ls -ah --color=auto -l -tr'
alias waas='sudo ls -ah --color=auto -l -Sr'
alias waat='sudo ls -ah --color=auto -l -tr -L'  # deref symlinks
alias waas='sudo ls -ah --color=auto -l -Sr -L'  #

alias rm='rm -i'  # woopsy
alias mv='mv -i'  #
alias cp='cp -i'  #

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias pd=pushd
alias d='dirs -v'
alias 1=pushd
alias 2='pushd +2'
alias 3='pushd +3'
alias 4='pushd +4'
alias 5='pushd +5'
alias 6='pushd +6'
alias 7='pushd +7'
alias 8='pushd +8'
alias 9='pushd +9'

have colordiff && alias diff=colordiff
have lftp && alias ftp=lftp
alias gdb='gdb -q'

if ! inside-emacs; then
    if have vim; then
        alias vi=vim
        alias ivm=vim
        alias wv='sudo vim'
    else
        alias ivm=vi
        alias wv='sudo vi'
    fi
    alias v=vi
    alias vv='vi ~/.vimrc'
    alias vh='vi /etc/hosts'
    alias vssh='vi ~/.ssh/config'
else
    alias vi=emacsclient
    alias vim=emacsclient
fi

#alias find-vim-swaps="find -L . -type f -name '.*.sw[pon]'"
function find-vim-swaps {
    local dir=~/.cache/vim/swap
    [ -z "$(ls -1 "${dir}")" ] && return 0
    for f in $(ls -1tr "${dir}"); do
        echo "${dir}/${f}"
        echo "$f" |tr % / |sed 's/\.sw[pon]$//'
        echo
    done
}

alias p='ps axf'
have pstree && alias p='pstree -U'
alias pp='ps axfww'

if have pgrep; then
    a_flag=a
    if command pgrep -l${a_flag} init 2>&1 |grep -q 'invalid option'; then
        a_flag=  # fall back; -a not supported.
    fi
    alias pg="pgrep -l${a_flag}"
    alias pgg="pgrep -lf${a_flag}"
    unset a_flag
else
    function pg { command ps axww |grep "$1" |grep -vw grep; }
    function pgg { pg "$@"; }  # TODO: maybe make these funcs mimic pgrep better
fi

#alias w='sudo'  # conflicts with /dr/k8s/funcs
alias count='wc -l'
alias chx='chmod a+x'
alias chw='sudo chmod a+w'
alias chr='sudo chmod a-w'
alias chb="sudo chown ${USER}:$(groups |awk '{ print $1}')"
alias untargzip='tar xvzf'
alias untarbzip='tar xvjf'
alias untarxz='tar xvJf'
#alias n='sudo ss -ltpn'
alias n='sudo lsof -Pni 2>/dev/null |grep LIST'
alias td='sudo tcpdump -nn'

if ! inside-emacs; then
    # grep -E screws up too many sourced scripts (sh-lib) that normally work in a non-interactive shell
    alias grep='grep -E --color=auto'
fi

alias gr='grep -RIi --color --exclude-dir=.git --exclude-dir=.tox --exclude-dir=.venv'
alias wgr='sudo grep -RIi --color --exclude-dir=.git --exclude-dir=.tox --exclude-dir=.venv'

if have rg; then
    alias gr=rg
    alias grq='gr --no-filename --no-heading --no-line-number'  # STFU
    alias gri="gr --ignore -g'!.{git,tox,venv}/**'"  # use .gitignore patterns
    alias griq="grq --ignore -g'!.{git,tox,venv}/**'"
    alias wgr='sudo rg'
    alias wgri="gr --ignore -g'!.{git,tox,venv}/**'"
fi

if have tree; then
    alias t='tree -aCI .git\|.tox\|.venv'
    alias tt='tree -apDFhCI .git\|.tox\|.venv'
else
    function t {
        local p="${1:-.}"
        find "$p" -path .git -o -path .tox -o path .venv -prune -o -print
    }
fi

alias ww=~/g2sh.pl
alias r2='ssh -l root'
alias j='journalctl -xab |less +G'
alias jf='journalctl -xfab'
alias ju='journalctl -u'
alias juu='journalctl --user -u'
alias uf='systemctl list-unit-files'
alias uuf='systemctl list-unit-files --user'
alias tf='tail -f'
alias wtf='sudo tail -f'
alias tmm='tmux ls'
inside-emacs || alias tma='tmux attach'
alias be='bundle exec'

alias k=kubectl
# alias kar='k api-resources |sort'
# alias kav='k api-versions |sort'
alias kaf='k apply -f'
alias kdf='k diff -f'
# alias kpf='k port-forward'

# # kubectl get
# alias kg='k get'
# alias kgr='k get --raw'
# alias kgw='k get -w'
# alias kga='k get all'
# alias kgaa='k get all -A'
# alias kgn='kg node'
# alias kgnw='kgw node'
# alias kgns='kg namespace'
# alias kgsa='kg serviceaccount'
# alias kgcm='kg configmap'
# alias kgt='kg secret'
# alias kgds='kg daemonset'
# alias kgdsw='kgw daemonset'
# alias kgrs='kg replicaset'
# alias kgrsw='kgw replicaset'
# alias kgsts='kg statefulset'
# alias kgstsw='kgw statefulset'
# alias kgd='kg deployment'
# alias kgdw='kgw deployment'
# alias kgp='kg pods'
# alias kgpw='kgw pods'
# alias kgpa='kgp -A'
# alias kgs='kg service'
# alias kgsw='kgw service'
# alias kgi='kg ingress'
# alias kgiw='kgw ingress'
# alias kgpv='kg pv'
# alias kgpvc='kg pvc'
# alias kgpvcw='kgw pvc'
# alias kgep='kg endpoints'
# alias kgepw='kgw endpoints'
# alias kges='kg es'
# alias kgesa='kg es -A'
# alias kgesaw='kgw es -A'
# alias kgmp='kg meshpolicy'
# alias kgmw='kg mutatingwebhookconfigurations'
# alias kgoc='kg otelcol'

# # kubectl describe
# alias kd='k describe'
# alias kdn='kd node'
# alias kdns='kd namespace'
# alias kdsa='kd serviceaccount'
# alias kdcm='kd configmap'
# alias kdt='kd secret'
# alias kdds='kd daemonset'
# alias kdrs='kd replicaset'
# alias kdsts='kd statefulset'
# alias kdd='kd deployment'
# alias kdp='kd pod'
# alias kds='kd service'
# alias kdpv='kd pv'
# alias kdpvc='kd pvc'
# alias kdep='kd endpoints'
# alias kdes='kd es'
# alias kdmp='kd meshpolicy'
# alias kdmw='kd mutatingwebhookconfigurations'
# alias kdoc='kd otelcol'

# # kubectl edit
# alias ke='k edit'
# alias kesa='ke serviceaccount'
# alias kecm='ke configmap'
# alias ket='ke secret'
# alias ked='ke deployment'
# alias keds='ke daemonset'
# alias kers='ke replicaset'
# alias kests='ke statefulset'
# alias kep='ke pod'
# alias kes='ke service'
# alias keoc='ke otelcol'

# # kubectl scale
# alias ksd='kubectl scale deploy --replicas'

# # kubectl exec
# alias kit='k exec -it'

# # kubectl logs
# alias kl='k logs'

# kubectl config
# alias kcc='k config get-contexts'
# alias kuc='k config use-context'
# alias kn='k config set-context --current --namespace'

alias nat='sudo iptables -L -n -t nat'

if command dmesg -V 2>&1 |grep -q 'invalid option'; then
    # XXX which version of util-linux introduced `-H'?  same one as `-V'?!
    alias dm='dmesg |less +G'
else
    alias dm="env LESS='$LESS +G' dmesg -H"
    alias dt='dmesg -Hw'
fi

if grep -iwq ubuntu /etc/issue; then
    alias aptdate='sudo apt-get update'
    alias cache='apt-cache search'
    alias show='apt-cache show'
    alias pmi='sudo apt-get install'
elif uname -a |grep -Eq '\.el[0-9]+\.?'; then
    alias cache='yum search'
    alias show='yum info'
    alias pmi='sudo yum install'
elif grep -iwq arch /etc/issue; then
    alias aptdate='sudo pacman -Syy'
    alias cache='yay -Ss'
    alias show='yay -Si'
    alias pmi='yay -S'
fi
